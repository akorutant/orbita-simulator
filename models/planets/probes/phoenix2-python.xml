<?xml version="1.0" encoding="utf-8"?>
<v:probe name="Phoenix" xmlns:v="venus">
  <flight>
    <mission name="Mars2"/>
    <start_height>80000.0</start_height>
  </flight>
  <parameters>
	<radius_external>0.811</radius_external>
    <radius_internal>0.81</radius_internal>
	<absorber>OFF</absorber>
    <isolator>OFF</isolator>
  </parameters>
  <devices>
	<device number="1" name="camera" start_state="OFF"/>
    <device number="1" name="generator" start_state="ON" in_safe_mode="ON"/>
	<device number="1" name="damper" start_state="ON"/>	
	<device number="1" name="transmitter" start_state="ON" in_safe_mode="ON"/>
	<device number="1" name="diagn" start_state="ON" in_safe_mode="ON"/>
	<device number="1" name="cpu" start_state="ON" in_safe_mode="ON"/>
	<device number="1" name="engine_g" start_state="OFF" in_safe_mode="OFF"/>
	<device number="1" name="fueltank" start_state="ON" in_safe_mode="ON"/>
	<device number="1" name="parachute_supersonic" start_state="OFF" in_safe_mode="ON"/>
	<device number="1" name="heatshield_light" start_state="ON" in_safe_mode="ON"/>
	</devices>
  <python_code><![CDATA[
hs = True
engine = False
landed = False
probe.set_device_period('D1', 10)
while probe.run():
    if not landed:
        if hs and probe.cpu_get_flight_time() >= 245:
            probe.set_device_state('Hsl1', STATE_OFF)
            probe.set_device_state('Pam1', STATE_ON)
            hs = False
            continue
        if not engine and probe.cpu_get_flight_time() >= 283:
            probe.set_device_state('EG1', STATE_ON)
            engine = True
            continue
        if probe.navigation_has_landed():
            probe.telemetry_send_message('landed\n')
            landed = True
            probe.set_device_state('C1', STATE_ON)
]]></python_code>
</v:probe>
